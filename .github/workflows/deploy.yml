name: CI/CD Control

on:
  pull_request:
    branches: ["master", "staging", "main"]
  push:
    branches: ["v-"]

permissions:
  contents: read

env:
  LAMBDA_NAME: ${{ vars.LAMBDA_NAME }}
  TEST: ${{ vars.TEST }}
  TEST_PATH: ${{ vars.TEST_PATH }}
  LINT: ${{ vars.LINT }}
  LINT_PATH: ${{ vars.LINT_PATH }}
  DEPLOY: ${{ vars.DEPLOY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  test:
    runs-on: ubuntu-latest
    needs: lint

    if: env.TEST == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11 in test
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install test dependencies
        run: |
          make install_pkg
      - name: Pytest
        run: |
          make test
  lint:
    runs-on: ubuntu-latest

    if: env.LINT == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11 in lint
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install lint dependencies
        run: |
          make install_pkg
      - name: Lint src
        run: |
          make lint
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]

    if: contains(github.ref, 'refs/heads/v-') && env.PUBLISH == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install poetry
        run: |
          make install_poetry
      - name: Build package
        run: |
          make build_pkg
      - name: Publish package
        run: |
          aws lambda update-function-code --function-name $LAMBDA_NAME --zip-file fileb://build/deployment_package.zip